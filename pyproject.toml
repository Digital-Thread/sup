[tool.poetry]
name = "sup"
version = "0.1.0"
description = ""
authors = ["dromanov <dtdzhalaev@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.113.0"
environs = "^10.3.0"
sqlalchemy = "2.0.25"
asyncpg = "^0.29.0"
structlog = "^24.1.0"
alembic = "^1.13.1"
redis = "^5.0.3"
dishka = "^1.2.0"
email-validator = "^2.2.0"
uvicorn = "^0.30.6"
greenlet = "^3.0.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
faker = "^24.4.0"
pytest-mock = "^3.14.0"
coverage = "^7.5.1"
mypy = "^1.8.0"
black = "^24.3.0"
isort = "^5.13.2"
deptry = "^0.12.0"
ruff = "^0.1.14"
pip-audit = "^2.7.0"
httpx = "^0.26.0"
pytest-asyncio = "^0.23.3"
pre-commit = "^3.6.2"

[tool.black]
line-length = 79
exclude = "venv"
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_unused_ignores = true
ignore_missing_imports = true
strict_optional = false
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
warn_redundant_casts = true
warn_unused_configs = true
strict_equality = true

[tool.isort]
profile = "black"
force_grid_wrap = 2
multi_line_output = 3
honor_noqa = true
float_to_top = true
combine_as_imports = true
force_sort_within_sections = true
include_trailing_comma = true
line_length = 79
use_parentheses = true
known_third_party = ["asyncpg", "fastapi", "pytest", "sqlalchemy"]

[tool.ruff]
line-length = 79

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools,migrations}/*" = ["F401"]

[tool.deptry]
ignore = ["DEP002"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
