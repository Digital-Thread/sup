"""Create permission_group table

Revision ID: a0d9800b2b0c
Revises: 6cf92e7445ab
Create Date: 2025-02-22 20:38:12.585037

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a0d9800b2b0c'
down_revision: Union[str, None] = '6cf92e7445ab'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'permission_groups',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('is_global', sa.Boolean(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=True),
        sa.Column('name', sa.String(length=20), nullable=False),
        sa.Column('description', sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_permission_groups_workspace_id_workspaces'),
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_permission_groups')),
    )
    op.create_table(
        'permission_group_permissions',
        sa.Column('permission_group_id', sa.Integer(), nullable=False),
        sa.Column('permission_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['permission_group_id'],
            ['permission_groups.id'],
            name=op.f('fk_permission_group_permissions_permission_group_id_permission_groups'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['permission_id'],
            ['permissions.id'],
            name=op.f('fk_permission_group_permissions_permission_id_permissions'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint(
            'permission_group_id', 'permission_id', name=op.f('pk_permission_group_permissions')
        ),
    )
    op.create_table(
        'permission_group_users',
        sa.Column('permission_group_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ['permission_group_id'],
            ['permission_groups.id'],
            name=op.f('fk_permission_group_users_permission_group_id_permission_groups'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
            name=op.f('fk_permission_group_users_user_id_users'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_permission_group_users_workspace_id_workspaces'),
        ),
        sa.PrimaryKeyConstraint(
            'permission_group_id', 'user_id', name=op.f('pk_permission_group_users')
        ),
    )
    op.create_unique_constraint(op.f('uq_categories_id'), 'categories', ['id'])
    op.create_unique_constraint(op.f('uq_comments_id'), 'comments', ['id'])
    op.create_unique_constraint(op.f('uq_meets_id'), 'meets', ['id'])
    op.create_unique_constraint(op.f('uq_participants_id'), 'participants', ['id'])
    op.create_unique_constraint(op.f('uq_project_participants_id'), 'project_participants', ['id'])
    op.create_unique_constraint(op.f('uq_projects_id'), 'projects', ['id'])
    op.create_unique_constraint(op.f('uq_roles_id'), 'roles', ['id'])
    op.create_unique_constraint(op.f('uq_tags_id'), 'tags', ['id'])
    op.create_unique_constraint(op.f('uq_user_workspace_roles_id'), 'user_workspace_roles', ['id'])
    op.create_unique_constraint(op.f('uq_workspace_invites_id'), 'workspace_invites', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_workspace_invites_id'), 'workspace_invites', type_='unique')
    op.drop_constraint(op.f('uq_user_workspace_roles_id'), 'user_workspace_roles', type_='unique')
    op.drop_constraint(op.f('uq_tags_id'), 'tags', type_='unique')
    op.drop_constraint(op.f('uq_roles_id'), 'roles', type_='unique')
    op.drop_constraint(op.f('uq_projects_id'), 'projects', type_='unique')
    op.drop_constraint(op.f('uq_project_participants_id'), 'project_participants', type_='unique')
    op.drop_constraint(op.f('uq_participants_id'), 'participants', type_='unique')
    op.drop_constraint(op.f('uq_meets_id'), 'meets', type_='unique')
    op.drop_constraint(op.f('uq_comments_id'), 'comments', type_='unique')
    op.drop_constraint(op.f('uq_categories_id'), 'categories', type_='unique')
    op.drop_table('permission_group_users')
    op.drop_table('permission_group_permissions')
    op.drop_table('permission_groups')
    # ### end Alembic commands ###
