"""empty message

Revision ID: cf353899bc30
Revises:
Create Date: 2024-10-30 16:01:15.997263

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf353899bc30'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('first_name', sa.String(), nullable=False),
        sa.Column('last_name', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
        sa.UniqueConstraint('email', name=op.f('uq_users_email')),
        sa.UniqueConstraint('last_name', name=op.f('uq_users_last_name')),
    )
    op.create_table(
        'workspaces',
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('logo', sa.String(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['owner_id'],
            ['users.id'],
            name=op.f('fk_workspaces_owner_id_users'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_workspaces')),
        sa.UniqueConstraint('name', name=op.f('uq_workspaces_name')),
    )
    op.create_table(
        'categories',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_categories_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
        sa.UniqueConstraint('id', name=op.f('uq_categories_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_categories'),
    )
    op.create_table(
        'projects',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_projects_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_projects')),
        sa.UniqueConstraint('id', name=op.f('uq_projects_id')),
    )
    op.create_table(
        'roles',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('color', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_roles_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
        sa.UniqueConstraint('id', name=op.f('uq_roles_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_roles'),
    )
    op.create_table(
        'tags',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('color', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_tags_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
        sa.UniqueConstraint('id', name=op.f('uq_tags_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_tags'),
    )
    op.create_table(
        'workspace_invites',
        sa.Column('code', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('expired_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_workspace_invites_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_workspace_invites')),
        sa.UniqueConstraint('code', name=op.f('uq_workspace_invites_code')),
        sa.UniqueConstraint('id', name=op.f('uq_workspace_invites_id')),
    )
    op.create_table(
        'workspace_members',
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
            name=op.f('fk_workspace_members_user_id_users'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_workspace_members_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('workspace_id', 'user_id', name=op.f('pk_workspace_members')),
    )
    op.create_table(
        'features',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['project_id'],
            ['projects.id'],
            name=op.f('fk_features_project_id_projects'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_features_tag_id_tags')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_features')),
        sa.UniqueConstraint('id', name=op.f('uq_features_id')),
    )
    op.create_table(
        'meets',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('meet_at', sa.DateTime(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('category_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['category_id'], ['categories.id'], name=op.f('fk_meets_category_id_categories')
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_meets_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_meets')),
        sa.UniqueConstraint('id', name=op.f('uq_meets_id')),
    )
    op.create_table(
        'user_workspace_roles',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['roles.id'],
            name=op.f('fk_user_workspace_roles_role_id_roles'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
            name=op.f('fk_user_workspace_roles_user_id_users'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_user_workspace_roles_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_user_workspace_roles')),
        sa.UniqueConstraint('id', name=op.f('uq_user_workspace_roles_id')),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_workspace_roles')
    op.drop_table('meets')
    op.drop_table('features')
    op.drop_table('workspace_members')
    op.drop_table('workspace_invites')
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('projects')
    op.drop_table('categories')
    op.drop_table('workspaces')
    op.drop_table('users')
    # ### end Alembic commands ###
