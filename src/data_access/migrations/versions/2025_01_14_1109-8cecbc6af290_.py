"""empty message

Revision ID: 8cecbc6af290
Revises:
Create Date: 2025-01-14 11:09:50.958234

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8cecbc6af290'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"")
    op.create_table(
        'users',
        sa.Column('first_name', sa.String(length=20), nullable=False),
        sa.Column('last_name', sa.String(length=20), nullable=False),
        sa.Column('email', sa.String(length=50), nullable=False),
        sa.Column('password', sa.String(length=200), nullable=False),
        sa.Column('username_tg', sa.String(length=50), nullable=False),
        sa.Column('nick_tg', sa.String(length=50), nullable=False),
        sa.Column('nick_gmeet', sa.String(length=50), nullable=False),
        sa.Column('nick_gitlab', sa.String(length=50), nullable=True),
        sa.Column('nick_github', sa.String(length=50), nullable=True),
        sa.Column('avatar', sa.String(), nullable=True),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
        sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    )
    op.create_table(
        'comments',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('task_id', sa.Integer(), nullable=True),
        sa.Column('feature_id', sa.Integer(), nullable=True),
        sa.Column('content', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'], ['users.id'], name=op.f('fk_comments_user_id_users'), ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_comments')),
        sa.UniqueConstraint('id', name=op.f('uq_comments_id')),
    )
    op.create_table(
        'workspaces',
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('logo', sa.String(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['owner_id'],
            ['users.id'],
            name=op.f('fk_workspaces_owner_id_users'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_workspaces')),
        sa.UniqueConstraint('name', name=op.f('uq_workspaces_name')),
    )
    op.create_table(
        'categories',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_categories_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
        sa.UniqueConstraint('id', name=op.f('uq_categories_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_categories'),
    )
    op.create_table(
        'projects',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('logo', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('assigned_to', sa.UUID(), nullable=True),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['assigned_to'], ['users.id'], name=op.f('fk_projects_assigned_to_users')
        ),
        sa.ForeignKeyConstraint(
            ['owner_id'], ['users.id'], name=op.f('fk_projects_owner_id_users')
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_projects_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_projects')),
        sa.UniqueConstraint('id', name=op.f('uq_projects_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_projects'),
    )
    op.create_table(
        'roles',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('color', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_roles_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
        sa.UniqueConstraint('id', name=op.f('uq_roles_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_roles'),
    )
    op.create_table(
        'tags',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('color', sa.String(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_tags_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
        sa.UniqueConstraint('id', name=op.f('uq_tags_id')),
        sa.UniqueConstraint('name', 'workspace_id', name='uix_name_workspace_id_tags'),
    )
    op.create_table(
        'workspace_invites',
        sa.Column('code', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('expired_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_workspace_invites_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_workspace_invites')),
        sa.UniqueConstraint('code', name=op.f('uq_workspace_invites_code')),
        sa.UniqueConstraint('id', name=op.f('uq_workspace_invites_id')),
    )
    op.create_table(
        'workspace_members',
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
            name=op.f('fk_workspace_members_user_id_users'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_workspace_members_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('workspace_id', 'user_id', name=op.f('pk_workspace_members')),
    )
    op.create_table(
        'features',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('description', sa.String(length=10000), nullable=True),
        sa.Column('priority', sa.Integer(), nullable=False),
        sa.Column('status', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('assigned_to_id', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ['assigned_to_id'], ['users.id'], name=op.f('fk_features_assigned_to_id_users')
        ),
        sa.ForeignKeyConstraint(
            ['owner_id'], ['users.id'], name=op.f('fk_features_owner_id_users')
        ),
        sa.ForeignKeyConstraint(
            ['project_id'],
            ['projects.id'],
            name=op.f('fk_features_project_id_projects'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'], ['workspaces.id'], name=op.f('fk_features_workspace_id_workspaces')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_features')),
    )
    op.create_index('ix_features_assigned_to_id', 'features', ['assigned_to_id'], unique=False)
    op.create_index('ix_features_project_id', 'features', ['project_id'], unique=False)
    op.create_index('ix_features_workspace_id', 'features', ['workspace_id'], unique=False)
    op.create_table(
        'meets',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('meet_at', sa.DateTime(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('category_id', sa.Integer(), nullable=False),
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('assigned_to', sa.UUID(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['assigned_to'], ['users.id'], name=op.f('fk_meets_assigned_to_users')
        ),
        sa.ForeignKeyConstraint(
            ['category_id'], ['categories.id'], name=op.f('fk_meets_category_id_categories')
        ),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_meets_owner_id_users')),
        sa.ForeignKeyConstraint(
            ['workspace_id'], ['workspaces.id'], name=op.f('fk_meets_workspace_id_workspaces')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_meets')),
        sa.UniqueConstraint('id', name=op.f('uq_meets_id')),
    )
    op.create_table(
        'project_participants',
        sa.Column('participant_id', sa.UUID(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['participant_id'],
            ['users.id'],
            name=op.f('fk_project_participants_participant_id_users'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['project_id'],
            ['projects.id'],
            name=op.f('fk_project_participants_project_id_projects'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_project_participants_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_project_participants')),
        sa.UniqueConstraint('id', name=op.f('uq_project_participants_id')),
        sa.UniqueConstraint(
            'project_id',
            'workspace_id',
            'participant_id',
            name='uix_workspace_project_participants',
        ),
    )
    op.create_table(
        'user_workspace_roles',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['roles.id'],
            name=op.f('fk_user_workspace_roles_role_id_roles'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
            name=op.f('fk_user_workspace_roles_user_id_users'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['workspace_id'],
            ['workspaces.id'],
            name=op.f('fk_user_workspace_roles_workspace_id_workspaces'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_user_workspace_roles')),
        sa.UniqueConstraint('id', name=op.f('uq_user_workspace_roles_id')),
    )
    op.create_table(
        'feature_tag',
        sa.Column('feature_id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['feature_id'],
            ['features.id'],
            name=op.f('fk_feature_tag_feature_id_features'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['tag_id'], ['tags.id'], name=op.f('fk_feature_tag_tag_id_tags'), ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('feature_id', 'tag_id', name=op.f('pk_feature_tag')),
    )
    op.create_table(
        'feature_user',
        sa.Column('feature_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ['feature_id'],
            ['features.id'],
            name=op.f('fk_feature_user_feature_id_features'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
            name=op.f('fk_feature_user_user_id_users'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('feature_id', 'user_id', name=op.f('pk_feature_user')),
    )
    op.create_table(
        'participants',
        sa.Column('meet_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['meet_id'], ['meets.id'], name=op.f('fk_participants_meet_id_meets')
        ),
        sa.ForeignKeyConstraint(
            ['user_id'], ['users.id'], name=op.f('fk_participants_user_id_users')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_participants')),
        sa.UniqueConstraint('id', name=op.f('uq_participants_id')),
        sa.UniqueConstraint('meet_id', 'user_id', name=op.f('uq_participants_meet_id_user_id')),
    )
    op.create_table(
        'tasks',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('due_date', sa.Date(), nullable=False),
        sa.Column('description', sa.String(length=10000), nullable=True),
        sa.Column('priority', sa.Integer(), nullable=False),
        sa.Column('status', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('workspace_id', sa.UUID(), nullable=False),
        sa.Column('feature_id', sa.Integer(), nullable=False),
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('assigned_to_id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ['assigned_to_id'], ['users.id'], name=op.f('fk_tasks_assigned_to_id_users')
        ),
        sa.ForeignKeyConstraint(
            ['feature_id'],
            ['features.id'],
            name=op.f('fk_tasks_feature_id_features'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_tasks_owner_id_users')),
        sa.ForeignKeyConstraint(
            ['workspace_id'], ['workspaces.id'], name=op.f('fk_tasks_workspace_id_workspaces')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks')),
    )
    op.create_index('ix_tasks_feature_id', 'tasks', ['feature_id'], unique=False)
    op.create_table(
        'task_tag',
        sa.Column('task_id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['tag_id'], ['tags.id'], name=op.f('fk_task_tag_tag_id_tags'), ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['task_id'], ['tasks.id'], name=op.f('fk_task_tag_task_id_tasks'), ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('task_id', 'tag_id', name=op.f('pk_task_tag')),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_tag')
    op.drop_index('ix_tasks_feature_id', table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('participants')
    op.drop_table('feature_user')
    op.drop_table('feature_tag')
    op.drop_table('user_workspace_roles')
    op.drop_table('project_participants')
    op.drop_table('meets')
    op.drop_index('ix_features_workspace_id', table_name='features')
    op.drop_index('ix_features_project_id', table_name='features')
    op.drop_index('ix_features_assigned_to_id', table_name='features')
    op.drop_table('features')
    op.drop_table('workspace_members')
    op.drop_table('workspace_invites')
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('projects')
    op.drop_table('categories')
    op.drop_table('workspaces')
    op.drop_table('comments')
    op.drop_table('users')
    # ### end Alembic commands ###
